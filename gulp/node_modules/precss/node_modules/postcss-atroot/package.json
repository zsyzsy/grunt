{
  "name": "postcss-atroot",
  "version": "0.1.3",
  "description": "PostCSS plugin to place rules directly at the root",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/OEvgeny/postcss-atroot.git"
  },
  "scripts": {
    "start": "gulp",
    "test": "gulp"
  },
  "keywords": [
    "postcss",
    "at-root",
    "postcss-plugin",
    "sass",
    "atroot",
    "css"
  ],
  "author": {
    "name": "OEvgeny"
  },
  "license": "MIT",
  "dependencies": {
    "postcss": "^5.0.5"
  },
  "devDependencies": {
    "chai": "^3.2.0",
    "gulp": "^3.9.0",
    "gulp-eslint": "^1.0.0",
    "gulp-mocha": "^2.1.3",
    "mocha": "^2.3.2"
  },
  "readme": "# PostCSS at-root [![Circle CI](https://circleci.com/gh/OEvgeny/postcss-atroot.svg?style=svg)](https://circleci.com/gh/OEvgeny/postcss-atroot)\nPostCSS plugin to place rules directly at the root node.\n\nThe ``@at-root`` causes one or more rules to be emitted at the root of the document, rather than being nested beneath their parent selectors:\n```css\n.parent {\n  ...\n  @at-root{\n    .child {...}\n  }\n}\n```\nWhich would produce:\n```css\n.child { ... }\n.parent { ... }\n```\n\nIt will play well with postcss ``@include`` plugins.  \nfoo.css:\n```css\n@at-root {\n  @viewport { width: device-width; }\n}\n.foo {\n  color: blue;\n}\n```\n\nbar.css:\n```css\n.bar {\n  @import \"foo.css\";\n}\n\n```\nWill produce:\n```css\n@viewport { width: device-width; }\n\n.bar .foo {\n  color: blue; \n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-atroot')() ])\n```\n\nSee [PostCSS] docs for examples for your environment.\n\n[PostCSS]: https://github.com/postcss/postcss\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/OEvgeny/postcss-atroot/issues"
  },
  "homepage": "https://github.com/OEvgeny/postcss-atroot",
  "_id": "postcss-atroot@0.1.3",
  "_from": "postcss-atroot@^0.1.2"
}
