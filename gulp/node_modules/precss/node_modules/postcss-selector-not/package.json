{
  "name": "postcss-selector-not",
  "version": "2.0.0",
  "description": "PostCSS plugin to transform :not() W3C CSS leve 4 pseudo class to :not() CSS level 3 selectors",
  "keywords": [
    "postcss",
    "postcss-plugin",
    "selectors",
    "selector",
    "Not"
  ],
  "author": {
    "name": "Maxime Thirouin"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/postcss/postcss-selector-not.git"
  },
  "main": "dist/index.js",
  "files": [
    "dist"
  ],
  "dependencies": {
    "balanced-match": "^0.2.0",
    "postcss": "^5.0.0"
  },
  "devDependencies": {
    "babel": "^5.1.13",
    "babel-eslint": "^3.1.15",
    "babel-tape-runner": "^1.1.0",
    "eslint": "^1.0.0",
    "tape": "^4.0.0"
  },
  "scripts": {
    "lint": "eslint .",
    "tape": "babel-tape-runner 'test/*.js'",
    "test": "npm run lint && npm run tape",
    "prepublish": "babel src --out-dir dist"
  },
  "readme": "# postcss-selector-not [![Build Status](https://travis-ci.org/postcss/postcss-selector-not.svg?branch=master)](https://travis-ci.org/postcss/postcss-selector-not)\n\n> PostCSS plugin to transform `:not()` W3C CSS leve 4 pseudo class to :not() CSS level 3 selectors\n\nhttp://dev.w3.org/csswg/selectors-4/#negation\n\n## Installation\n\n```console\n$ npm install postcss-selector-not\n```\n\n## Usage\n\n```js\nvar postcss = require(\"postcss\")\n\nvar output = postcss()\n  .use(require(\"postcss-selector-not\"))\n  .process(require(\"fs\").readFileSync(\"input.css\", \"utf8\"))\n  .css\n```\n\nUsing this `input.css`:\n\n```css\np:not(:first-child, .special) {\n  color: red;\n}\n```\n\nyou will get:\n\n```css\np:not(:first-child), p:not(.special) {\n  color: red;\n}\n```\n\n---\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/postcss/postcss-selector-not/issues"
  },
  "homepage": "https://github.com/postcss/postcss-selector-not",
  "_id": "postcss-selector-not@2.0.0",
  "_from": "postcss-selector-not@^2.0.0"
}
